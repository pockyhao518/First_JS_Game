{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/ball.js","webpack:///./src/index.js","webpack:///./src/scripts/game.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","radius","Ball","demensions","this","idx","Math","floor","random","length","set","color","y","vx","vy","num","cx","width","x","ceil","atan2","sqrt","ctx","beginPath","arc","PI","fillStyle","fill","closePath","canvas","side","getContext","rect","getBoundingClientRect","dimensions","height","balls","running","moveObject","score","ctxside","dimensions2","dropevents","restart","animate","ball","push","boundClickHandler","click","addEventListener","e","console","log","left","pageX","slice","play","a","b","j","ob1","ob2","dist","distance","theta1","angle","theta2","beta","m1","m2","v1","speed","v2","dx1F","cos","sin","dy1F","dx2F","dy2F","check","splice","midX","midY","newBall","merge","countAttack","wall","emergency","overlap","smallerObject","biggerObject","theta","obj","abs","forEach","drawBall","clearRect","ballCollision","ballmove","gameOver","alert","font","fillText","requestAnimationFrame","document","getElementById"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const radius = [[10, 'rgb(100,100,105)'], [20, 'rgb(255,255,255)'], [30, 'rgb(210,221,187)'], [40, 'rgb(209,211,211)'], [50,'rgb(241,194,178)']]\n\nexport default class Ball {\n    constructor(demensions){\n        this.demensions = demensions;\n        this.idx = Math.floor(Math.random()*(radius.length-2)) + 2\n        let set = radius[this.idx]\n        this.r = set[0]\n        this.color = set[1]\n        this.y = 0;\n        this.vx = 0;;\n        this.vy = 8;\n    }\n    merge(idx){\n        let set = radius[idx - 1]\n        this.r = set[0];\n        this.color = set[1];\n    }\n    set(num){\n        let cx = num;\n        if(cx > this.r && (cx + this.r) <= this.demensions.width){\n            this.x = (cx - (cx % this.r));\n        }else if(cx < this.r){\n            this.x = Math.ceil(cx/this.r)*this.r\n        }else if ((cx+this.r )> this.demensions.width){\n            this.x = this.demensions.width - this.r\n        }\n    }\n\n    angle() {\n        return Math.atan2(this.vy, this.vx);\n    };\n\n    speed(){\n        return Math.sqrt(this.vx**2 + this.vy**2)\n    }\n    // fall(){\n    //     if (this.y <= this.demensions.height){\n    //         this.y += CONSTANTS.TERMINAL_VEL;\n    //     }\n    // }\n\n    // animate(ctx){\n    //     // if (this.y + this.r < this.demensions.height){\n    //         // ctx.clearRect(0,0,this.demensions.width, this.demensions.height);\n    //         // this.fall()\n    //         this.ballmove() \n    //         this.drawBall(ctx)\n    //     // }\n        \n    // }\n\n    drawBall(ctx){\n        // let img = new Image();\n        // img.src = '/src/images/25231.png';\n        // let myPattern = ctx.createPattern(img, 'repeat');\n        \n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.r, 0, Math.PI * 2);\n        // ctx.fillStyle = myPattern;\n        ctx.fillStyle = this.color;\n        ctx.fill();\n        // ctx.stroke();\n        ctx.closePath();\n        \n    }\n\n    // ballmove() {\n    //     this.x += this.vx;\n    //     this.y += this.vy;\n    //     this.vy += CONSTANTS.GRAVITY;\n\n    //     if (this.x + this.r >= this.demensions.width-1) {\n    //         this.x = this.demensions.width - this.r;\n    //         this.vx *= -CONSTANTS.BOUNCE;\n    //     }else if(this.x - this.r <= 0.2 ){\n    //         this.x = this.r;\n    //         this.vx *= -CONSTANTS.BOUNCE;\n    //     }\n    //     if (this.y + this.r >= this.demensions.height) {\n    //         this.y = this.demensions.height - this.r;\n    //         this.vy *= -CONSTANTS.BOUNCE;\n    //         if (this.vy < 0 && this.vy > -2.0)\n    //             this.vy = 0;\n    //         if (Math.abs(this.vx) < 0.5)\n    //             this.vx = 0;\n    //         this.xF();\n    //     }\n    // }\n\n    // xF() {\n    //     if (this.vx > 0)\n    //         this.vx = this.vx - CONSTANTS.FR;\n    //     if (this.vx < 0)\n    //         this.vx = this.vx + CONSTANTS.FR;\n    // }\n}","import \"./styles/index.scss\";\n\nimport Tetris2048 from './scripts/game';\n\nconst canvas = document.getElementById('gamescreen');\nconst side = document.getElementById('side');\n// var background = new Image();\n// background.src = \"/images/25231.png\";\n\n// Make sure the image is loaded first otherwise nothing will draw.\n// background.onload = function () {\n//     ctx.drawImage(background, 0, 0);\n// }\n\nnew Tetris2048(canvas,side);\n","import Ball from './ball'\n\nexport default class Tetris2048{\n    constructor(canvas,side) {\n        this.ctx = canvas.getContext(\"2d\");\n        this.rect = canvas.getBoundingClientRect(); \n        this.dimensions = { width: canvas.width, height: canvas.height };\n        this.cx = null;\n        this.balls = [];\n        this.running = false;\n        this.moveObject = [];\n        this.score = 0;\n        this.ctxside = side.getContext('2d');\n        this.dimensions2 = { width: side.width, height: side.height}\n        \n        this.dropevents();\n        this.restart();\n    }\n    \n    play(){\n        this.running = true;\n        this.animate()\n    }\n\n    restart(){\n        this.running = false;\n        this.score = 0;\n        this.balls = [];\n        // this.box = new Box(this.dimensions)\n        let ball = new Ball(this.dimensions)\n        this.balls.push(ball)\n        this.animate()\n    }\n\n    dropevents() {\n        // let ball = new Ball(this.dimensions)\n        // this.balls.push(ball)\n        this.boundClickHandler = this.click.bind(this);\n        this.ctx.canvas.addEventListener(\"mousedown\", this.boundClickHandler);\n       \n    }\n\n    click(e) {\n        // this.cx = e.pageX;\n        let ball = new Ball(this.dimensions)\n        this.balls.push(ball)\n        console.log(this.rect.left)\n        this.balls[this.balls.length - 2].set(e.pageX - this.rect.left);\n        this.moveObject = this.balls.slice(0,this.balls.length - 1)\n        if (!this.running) {\n            this.play();\n        }\n    }\n\n    distance(a, b) {\n        return Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n    }\n\n    ballCollision() {\n        for (let i = 0; i < this.moveObject.length - 1; i++) {\n            for (let j = i + 1; j < this.moveObject.length; j++) {\n                let ob1 = this.moveObject[i]\n                let ob2 = this.moveObject[j]\n                let dist = this.distance(ob1, ob2)\n                let dx = ob2.x - ob1.x;\n                let dy = ob2.y - ob1.y;\n            \n                if (dist <= ob1.r + ob2.r) {\n                    // if(this.check(ob1,ob2)){\n                    //     if(ob1.color === 'red'){\n                    //         this.moveObject.splice(j, 1)\n                    //         this.moveObject.splice(i, 1);\n                    //         this.balls.splice(j, 1)\n                    //         this.balls.splice(i, 1)\n                    //         this.score += 5\n                    //     }else{\n                    //         let midX = (ob1.x + ob2.x) / 2;\n                    //         let midY = (ob1.y + ob2.y) / 2;\n                    //         let newBall = new Ball(this.dimensions);\n                    //         newBall.merge(ob2.idx);\n                    //         newBall.x = midX;\n                    //         newBall.y = midY;\n                    //         newBall.idx = ob2.idx-1;\n                    //         if(ob1.speed() > ob2.speed()){\n                    //             newBall.vx = ob1.vx*0.9;\n                    //             newBall.vy = ob1.vy * 0.9;\n                    //         }else{\n                    //             newBall.vx = ob2.vx * 0.9;\n                    //             newBall.vy = ob2.vy * 0.9;\n                    //         }\n                            \n                    //         this.moveObject.splice(j,1)\n                    //         this.moveObject.splice(i,1,newBall);\n                    //         this.balls.splice(j,1)\n                    //         this.balls.splice(i,1,newBall)\n                    //         this.score += 6 - ob2.r/10\n                    //     }\n                        \n\n                    // }else{\n\n                    \n                    let theta1 = ob1.angle();\n                    let theta2 = ob2.angle();\n                    let beta = Math.atan2(ob2.y - ob1.y, ob2.x - ob1.x);\n                    let m1 = ob1.r/5;\n                    let m2 = ob2.r/5;\n                    let v1 = ob1.speed();\n                    let v2 = ob2.speed();\n                    \n                    let dx1F = (v1 * Math.cos(theta1 - beta) * (m1 - m2) + 2 * m2 * v2 * Math.cos(theta2 - beta)) / (m1 + m2) * Math.cos(beta) + v1 * Math.sin(theta1 - beta) * Math.cos(beta + Math.PI / 2);\n                    let dy1F = (v1 * Math.cos(theta1 - beta) * (m1 - m2) + 2 * m2 * v2 * Math.cos(theta2 - beta)) / (m1 + m2) * Math.sin(beta) + v1 * Math.sin(theta1 - beta) * Math.sin(beta + Math.PI / 2);\n                    let dx2F = (v2 * Math.cos(theta2 - beta) * (m2 - m1) + 2 * m1 * v1 * Math.cos(theta1 - beta)) / (m1 + m2) * Math.cos(beta) + v2 * Math.sin(theta2 - beta) * Math.cos(beta + Math.PI / 2);\n                    let dy2F = (v2 * Math.cos(theta2 - beta) * (m2 - m1) + 2 * m1 * v1 * Math.cos(theta1 - beta)) / (m1 + m2) * Math.sin(beta) + v2 * Math.sin(theta2 - beta) * Math.sin(beta + Math.PI / 2);\n                   \n                    if (this.check(ob1, ob2)) {\n                        if (ob1.color === 'rgb(100,100,105)') {\n                            this.moveObject.splice(j, 1)\n                            this.moveObject.splice(i, 1);\n                            this.balls.splice(j, 1)\n                            this.balls.splice(i, 1)\n                            this.score += 5\n                        } else {\n                            let midX = (ob1.x + ob2.x) / 2;\n                            let midY = (ob1.y + ob2.y) / 2;\n                            let newBall = new Ball(this.dimensions);\n                            newBall.merge(ob2.idx);\n                            newBall.x = midX;\n                            newBall.y = midY;\n                            newBall.idx = ob2.idx - 1;\n                            newBall.vy = (this.dimensions.height/100)/2\n                            // newBall.vx = (ob1.vx - ob2.vx)/5\n                            // if (ob1.speed() > ob2.speed()) {\n                            //     newBall.vx = ob1.vx * 0.9;\n                            //     newBall.vy = ob1.vy * 0.9;\n                            // } else {\n                            //     newBall.vx = ob2.vx * 0.9;\n                            //     newBall.vy = ob2.vy * 0.9;\n                            // }\n                            this.moveObject.splice(j, 1)\n                            this.moveObject.splice(i, 1, newBall);\n                            this.balls.splice(j, 1)\n                            this.balls.splice(i, 1, newBall)\n                            this.score += 6 - ob2.r / 10\n                        }\n\n\n                    } else {\n                    ob1.vx = dx1F;\n                    ob1.vy = dy1F ;\n                    ob2.vx = dx2F ;\n                    ob2.vy = dy2F ;\n                    // let normalX = dx/dist;\n                    // let normalY = dy/dist;\n                    // let midX = (ob1.x+ob2.x)/2;\n                    // let midY = (ob1.y +ob2.y)/2;\n                    // ob1.x = midX - (ob1.r * normalX);\n                    // ob1.y = midY - (ob1.r * normalY);\n                    // ob2.x = midX + (ob2.r * normalX);\n                    // ob2.y = midY + (ob2.r * normalY);\n                    // let dev = (ob1.vx - ob2.vx) * normalX;\n                    // dev += (ob1.vy - ob2.vy) * normalY;\n                    // let dvx = dev * normalX;\n                    // let dvy = dev * normalY;\n                    // ob1.vx -= dvx;\n                    // ob1.vy -= dvy;\n                    // ob2.vx += dvx;\n                    // ob2.vy += dvy;\n                    this.countAttack(ob1,ob2)\n                    }\n                    \n                }\n                \n            }\n            this.wall(this.moveObject[i]);\n        }\n\n        if (this.moveObject.length > 0)\n            this.wall(this.moveObject[this.moveObject.length - 1])\n    }\n\n    countAttack(ob1, ob2, emergency = false) {\n        let overlap = ob1.r + ob2.r - this.distance(ob1, ob2);\n        let smallerObject = ob1.r < ob2.r ? ob1 : ob2;\n        let biggerObject = ob1.r > ob2.r ? ob1 : ob2;\n\n        if (emergency) {\n            [smallerObject, biggerObject] = [biggerObject, smallerObject]\n        }\n        let theta = Math.atan2((biggerObject.y - smallerObject.y), (biggerObject.x - smallerObject.x));\n        smallerObject.x -= overlap * Math.cos(theta);\n        smallerObject.y -= overlap * Math.sin(theta);\n\n        if (this.distance(ob1, ob2) < ob1.r + ob2.r) {\n            if (!emergency) this.countAttack(ob1, ob2, true)\n        }\n    }\n\n    wall(obj){\n        if (obj.x - obj.r  < 0 ||\n            obj.x + obj.r > this.dimensions.width) {\n            obj.vx *= -0.9;\n        }\n        if (obj.y + obj.r  > this.dimensions.height) {\n            obj.vy *= -0.9;\n        }\n        if (obj.y - obj.r < 100){\n            obj.vy = Math.abs(obj.vy)\n        }\n        if (obj.y + obj.r > this.dimensions.height) {\n            obj.y = this.dimensions.height - obj.r;\n        }\n        if (obj.y - obj.r < 0) {\n            obj.y = obj.r;\n        }\n        if (obj.x + obj.r > this.dimensions.width) {\n            obj.x = this.dimensions.width - obj.r;\n        }\n        if (obj.x - obj.r < 0) {\n            obj.x = obj.r;\n        }    \n    }\n\n    ballmove() {\n        this.moveObject.forEach(obj => {\n        obj.x += obj.vx;\n        obj.y += obj.vy; \n        //    this.xF(obj);\n        obj.drawBall(this.ctx)\n        \n        })\n       \n    }\n\n    // xF(obj) {\n    //     if (obj.vx > 0 && obj.y + obj.r >= this.dimensions.height){\n    //         obj.vx -= 0.1;\n    //     }\n            \n    //     if (obj.vx < 0 && obj.y + obj.r >= this.dimensions.height){\n    //         obj.vx += 0.1;\n    //     }\n            \n    //     if(Math.abs(obj.vx) < 0.5&&(obj.y + obj.r) >= this.dimensions.height){\n    //         obj.vx = 0;\n    //     }\n    //     if(obj.y + obj.r <this.dimensions.height){\n    //         obj.vy += 0.2;\n    //     }else{\n    //         obj.vy = 0;\n    //     }\n        \n\n    // }\n\n    check(ob1,ob2){\n        return ob1.color === ob2.color;\n        // return false;\n    }\n    gameOver(){\n        return this.balls.length > 6;\n    }\n    animate(){\n        // this.box.animate(this.ctx);\n        this.ctx.clearRect(0, 0, this.dimensions.width, this.dimensions.height);\n        this.ctxside.clearRect(0, 0, this.dimensions.width, this.dimensions.height);\n        // this.ball.animate(this.ctx); \n        // this.ballmove();\n        this.ballCollision();\n        this.ballmove();\n        // this.moveObject.forEach(ball=>{\n        //         ball.drawBall(this.ctx)\n            \n        // })\n\n        if(this.balls.length === 1){\n            this.ctx.clearRect(0, 0, this.dimensions.width, this.dimensions.height);\n        }\n\n        if (this.gameOver()) {\n            alert(\"Congratulations, You got: \" + this.score);\n            this.restart();\n        }\n        this.ctxside.beginPath();\n        this.ctxside.font = '20px PT Sans'\n        this.ctxside.fillStyle = '#97928A'\n        this.ctxside.fillText('Next Ball', 15, 20, 100);\n        this.ctxside.closePath();\n\n        this.ctxside.beginPath();\n        this.ctxside.arc(40, 40, 10, 0, Math.PI * 2);\n        // ctx.fillStyle = myPattern;\n        this.ctxside.fillStyle = this.balls[this.balls.length - 1].color;\n        this.ctxside.fill();\n        // this.ctxside.stroke();\n        this.ctxside.closePath();\n        \n        this.ctxside.beginPath();\n        this.ctxside.font = '20px PT Sans'\n        this.ctxside.fillStyle = '#97928A'\n        this.ctxside.fillText('Ball Left', 15, 80, 100);\n        this.ctxside.fillText(6 - this.balls.length, 5, 110, 100);\n        // this.ctxside.closePath();\n        // // if(this.gameOver()){\n        // //     alert(this.score);\n        // //     this.restart()\n        // // }\n        // // this.ctxside.beginPath();\n        // this.ctxside.font = '20px PT Sans'\n        // this.ctxside.fillStyle = '#97928A'\n        this.ctxside.fillText('Score', 15, 140, 100);\n        this.ctxside.fillText(this.score, 15, 170, 100);\n        // this.ctxside.closePath();\n\n        // this.ctxside.beginPath();\n        // this.ctxside.font = '20px PT Sans'\n        // this.ctxside.fillStyle = '#97928A'\n        this.ctxside.fillText('How To Play', 10, 200, 100);\n        this.ctxside.fillText('Click to drop', 10, 250, 100);\n        this.ctxside.fillText('the ball,', 10, 280, 100);\n        this.ctxside.fillText('you can drop', 10, 310, 100);\n        this.ctxside.fillText('5 balls maximum.', 10, 340, 100);\n        this.ctxside.fillText('Same balls will', 10, 370, 100);\n        this.ctxside.fillText('merge and', 10, 400, 100);\n        this.ctxside.fillText('getting smaller.', 10, 430, 100);\n        this.ctxside.closePath();\n\n\n        if(this.running){\n            requestAnimationFrame(this.animate.bind(this))\n        }\n        \n        // if (this.running){\n        //     requestAnimationFrame(this.animate.bind(this))\n        // }\n    }\n\n}\n\n"],"sourceRoot":""}